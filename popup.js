document.addEventListener('DOMContentLoaded', function() {
  // Load prompts from prompts.json
  fetch(chrome.runtime.getURL('prompts.json'))
    .then(response => response.json())
    .then(data => {
      window.prompts = data;
    })
    .catch(error => console.error('Error loading prompts:', error));

  // Load saved favorites and streak
  loadFavorites();
  loadStreak();
  loadTheme();

  // Theme toggle
  document.getElementById('theme-toggle').addEventListener('click', function() {
    const body = document.body;
    const isDark = body.classList.toggle('dark-mode');
    this.innerHTML = isDark ? '<i class="fas fa-sun"></i>' : '<i class="fas fa-moon"></i>';
    chrome.storage.local.set({ theme: isDark ? 'dark' : 'light' });
  });

  // Copy prompt to clipboard
  document.getElementById('copy-prompt').addEventListener('click', function() {
    const prompt = document.getElementById('prompt-display').textContent;
    if (prompt && prompt !== 'No prompts available for this genre.') {
      navigator.clipboard.writeText(prompt).then(() => {
        const copyMessage = document.getElementById('copy-message');
        copyMessage.textContent = 'Prompt copied to clipboard!';
        copyMessage.style.opacity = '1';
        setTimeout(() => {
          copyMessage.style.opacity = '0';
        }, 2000);
      }).catch(err => {
        console.error('Failed to copy prompt:', err);
        const copyMessage = document.getElementById('copy-message');
        copyMessage.textContent = 'Failed to copy prompt.';
        copyMessage.style.opacity = '1';
        setTimeout(() => {
          copyMessage.style.opacity = '0';
        }, 2000);
      });
    }
  });

  // Share prompt on social media
  function sharePrompt(platform) {
    const prompt = document.getElementById('prompt-display').textContent;
    if (prompt && prompt !== 'No prompts available for this genre.') {
      const encodedPrompt = encodeURIComponent(prompt);
      const shareText = `${encodedPrompt}\nGenerated by StoryIgnite! Check it out: https://chrome.google.com/webstore/detail/storyignite`;
      let shareUrl;
      switch (platform) {
        case 'twitter':
          shareUrl = `https://twitter.com/intent/tweet?text=${shareText}`;
          break;
        case 'facebook':
          shareUrl = `https://www.facebook.com/sharer/sharer.php?u=https://chrome.google.com/webstore/detail/storyignite&quote=${encodedPrompt}`;
          break;
        case 'linkedin':
          shareUrl = `https://www.linkedin.com/shareArticle?mini=true&url=https://chrome.google.com/webstore/detail/storyignite&title=StoryIgnite%20Writing%20Prompt&summary=${encodedPrompt}`;
          break;
        default:
          return;
      }
      window.open(shareUrl, '_blank');
    }
  }

  document.getElementById('share-twitter').addEventListener('click', () => sharePrompt('twitter'));
  document.getElementById('share-facebook').addEventListener('click', () => sharePrompt('facebook'));
  document.getElementById('share-linkedin').addEventListener('click', () => sharePrompt('linkedin'));

  // Footer button actions
  document.getElementById('privacy-btn').addEventListener('click', function() {
    window.open('https://storyignite.example.com/privacy', '_blank');
  });

  document.getElementById('faq-btn').addEventListener('click', function() {
    window.open('https://storyignite.example.com/faq', '_blank');
  });

  document.getElementById('support-btn').addEventListener('click', function() {
    window.open('https://storyignite.example.com/support', '_blank');
  });

  // Generate a random prompt
  function generatePrompt() {
    const genre = document.getElementById('genre').value;
    if (window.prompts && window.prompts[genre]) {
      const randomIndex = Math.floor(Math.random() * window.prompts[genre].length);
      const prompt = window.prompts[genre][randomIndex];
      document.getElementById('prompt-display').textContent = prompt;
      updateStreak();
    } else {
      document.getElementById('prompt-display').textContent = 'No prompts available for this genre.';
    }
  }

  document.getElementById('generate').addEventListener('click', generatePrompt);
  document.getElementById('regenerate').addEventListener('click', generatePrompt);

  // Save the current prompt as a favorite
  document.getElementById('save-favorite').addEventListener('click', function() {
    const prompt = document.getElementById('prompt-display').textContent;
    if (prompt && prompt !== 'No prompts available for this genre.') {
      chrome.storage.local.get(['favorites'], function(result) {
        let favorites = result.favorites || [];
        if (!favorites.includes(prompt)) {
          favorites.push(prompt);
          chrome.storage.local.set({favorites: favorites}, function() {
            loadFavorites();
            const saveMessage = document.getElementById('save-message');
            saveMessage.textContent = 'Saved to Favorites!';
            saveMessage.style.opacity = '1';
            setTimeout(() => {
              saveMessage.style.opacity = '0';
            }, 2000);
          });
        }
      });
    }
  });

  // Remove a favorite prompt
  document.getElementById('favorites-list').addEventListener('click', function(e) {
    if (e.target.classList.contains('remove-favorite')) {
      const prompt = e.target.parentElement.textContent.replace('Remove', '').trim();
      chrome.storage.local.get(['favorites'], function(result) {
        let favorites = result.favorites || [];
        favorites = favorites.filter(fav => fav !== prompt);
        chrome.storage.local.set({favorites: favorites}, function() {
          loadFavorites();
        });
      });
    }
  });

  // Load and display saved favorites
  function loadFavorites() {
    chrome.storage.local.get(['favorites'], function(result) {
      const favorites = result.favorites || [];
      const list = document.getElementById('favorites-list');
      list.innerHTML = '';
      if (favorites.length > 0) {
        favorites.forEach(fav => {
          const li = document.createElement('li');
          li.innerHTML = `${fav} <button class="remove-favorite">Remove</button>`;
          list.appendChild(li);
        });
      }
    });
  }

  // Load and update streak
  function loadStreak() {
    chrome.storage.local.get(['streak', 'lastUsed'], function(result) {
      const streak = result.streak || 0;
      const lastUsed = result.lastUsed || null;
      document.getElementById('streak-count').textContent = streak;
      if (!lastUsed) {
        updateStreak();
      }
    });
  }

  function updateStreak() {
    chrome.storage.local.get(['lastUsed'], function(result) {
      const lastUsed = result.lastUsed || null;
      const today = new Date().toISOString().split('T')[0];
      if (lastUsed !== today) {
        chrome.storage.local.get(['streak'], function(result) {
          let streak = result.streak || 0;
          streak = lastUsed ? (isConsecutive(lastUsed, today) ? streak + 1 : 1) : 1;
          chrome.storage.local.set({streak: streak, lastUsed: today}, function() {
            document.getElementById('streak-count').textContent = streak;
          });
        });
      }
    });
  }

  function isConsecutive(lastDate, today) {
    const last = new Date(lastDate);
    const current = new Date(today);
    last.setDate(last.getDate() + 1);
    return last.toISOString().split('T')[0] === current.toISOString().split('T')[0];
  }

  // Load theme
  function loadTheme() {
    chrome.storage.local.get(['theme'], function(result) {
      const theme = result.theme || 'light';
      if (theme === 'dark') {
        document.body.classList.add('dark-mode');
        document.getElementById('theme-toggle').innerHTML = '<i class="fas fa-sun"></i>';
      }
    });
  }
});